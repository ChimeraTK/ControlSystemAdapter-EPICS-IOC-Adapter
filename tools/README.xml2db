xml2db: Tool to generate EPICS .db file(s) from ChimeraTK process variables, extracted into xml file with the tool 'llrfserver-xmlGenerator'.
Dependancies: Python 3.5
Tested on Debian Linux 4.13.0-45-generic

usage: xml2db [-h] [-x RegEx] [-r [macro] | -o [macro]] [-m length_of_macros]
              [-v] [-ver] [-s] [-D path] [-ns xml_NameSpace]
              path_xml path_db

Writes EPICS record for every 'variable' defined in ChimeraTK-xml file to
EPICS database file. Optionally a subset of PVs, described by a regular
expression, can be extracted and autosave request files can be created
additionally or exclusively.

positional arguments:
  path_xml              Path of ChimeraTK xml file
  path_db               Path of EPICS db file

optional arguments:
  -h, --help            show this help message and exit
  -x RegEx, --extract RegEx
                        Generates .db file, which only contains records for
                        PVs matching the regular expression RegEx
  -r [macro], --asRequest [macro]
                        Generate additionally an autosave request file as
                        <path_db>.req with MACRO being the entirety of macros
                        used, when loading the records.
  -o [macro], --asRequestOnly [macro]
                        Generate just an autosave request file as
                        <path_db>.req with MACRO being the entirety of macros
                        used, when loading the records.
  -m length_of_macros, --macro length_of_macros
                        Maximum combined length of macros used, when loading
                        the records. Is subtracted from max length of PVs.
                        Defaults to 5.
  -v, --verbose         Activates verbosity
  -ver, --version       Prints version and exits
  -s, --shorter         -s shortens just the last part of th PV. -ss shortens
                        also parts of the PV before the last separator. -sss
                        shortens every part of every PV indiscriminately
  -D path, --pathToDict path
                        Path to the file "dictionary.py". Only necessary, if
                        it is not in this directory, nor a directory defined
                        in the environment variable "PYTHONPATH".
  -ns xml_NameSpace, --namespace xml_NameSpace
                        Define a different xml namespace. Default:
                        https://github.com/ChimeraTK/ApplicationCore

About regular expressions for EXTRACT:

-   Keep in mind, that it compares the PV string with the regex, before MACRO is added.
    Thus, exclude the content of MACRO from the regular expression.
-   Construct the regular expression to match the whole PV: EXTRACT = '^<pattern>$'

    Examples:
    Extract all PVs from 'Automation' branch:
        '^(Automation/)\w+/*\w+$'
    Extract all PVs, which have 'Calibration' anywhere in their PV, but in the "root":
        '^(\w+/)+\w*(Calibration)(\w*/)*\w+$'
    Extract all PVs, but those who have a "directory" "DAQ" or a "variable" containing "raw" in their PV:
        '^(?!(\w+/)+DAQ/|\w+/)+\w*raw\w*)(\w+/)*\w+$'
    Extract all PVs, which "variable" contains "enable":
        '^(\w+/)+\w*(enable)\w*$'

About dictionaries:

The dictionary for abbreviations has to be a dictionary-type array, which is returned by a function "abbreviation()" from a file named "dictionary.py". If this file is not within the same directory as the xml2db file, or in any directory defined in the environment variable PYTHONPATH, the option -D can be used to allow xml2db to find the file "dictionary.py".

About PV name shortening:

The flag -s is accumulative. It can be used up to three times, to use different escalation levels of shortening:

 None:  The PV names aren't shortened at all. Every overlong PV name generates an error massage and the files are not written.
 -s:    Only the part of the PV name after the last slash is shortened. If this is not enough, the tool will abort.
 -ss:   If the PV name is too long, all parts of the PV names (save the slashes) are tried to be shortened.
 -sss:  Every PV name is shortened.